services:
    web:
        build:
            context: .
            dockerfile: ./apps/web/Dockerfile
        environment:
            - LOG_LEVEL=debug
            - CONFIG_DIR=/app/config
            - API=http://api:1993
            - PORT=3000
        ports:
            - 3000:3000
        volumes:
            - ./config:/app/config
        depends_on:
            - api

    api:
        build:
            context: .
            dockerfile: ./apps/api/Dockerfile
        secrets:
            - db-password
        environment:
            - LOG_LEVEL=debug
            - CONFIG_DIR=/app/config
            - DB_HOST=db
            - DB_USER=postgres
            - DB_PASSWORD_FILE=/run/secrets/db-password
        ports:
            - 1993:1993
        volumes:
            - ./config:/app/config
        depends_on:
            - db

    db:
        image: postgres:17-alpine
        ports:
            - 5432:5432
        secrets:
            - db-password
        environment:
            - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
            - POSTGRES_USER=postgres
            - POSTGRES_DB=karr
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres"]
            interval: 5s
            timeout: 5s
            retries: 5

    caddy:
        build:
            context: ./apps/caddy
            dockerfile: Dockerfile
        restart: unless-stopped
        ports:
            - 8080:8080
            #- "443:443"
            #- "443:443/udp"
        environment:
            - TZ=Europe/Paris
            - SITE_ADDRESS=:8080
            - API_PORT=1993
            - WEB_PORT=3000
            - CADDY_DISABLE_TLS=1
        volumes:
            - ./apps/caddy/data:/data
            - ./apps/caddy/config:/config

volumes:
    caddy_data:
    caddy_config:

secrets:
    db-password:
        file: ./pass.txt
